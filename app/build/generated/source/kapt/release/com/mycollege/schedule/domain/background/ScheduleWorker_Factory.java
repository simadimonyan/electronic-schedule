// Generated by Dagger (https://dagger.dev).
package com.mycollege.schedule.domain.background;

import android.content.Context;
import androidx.work.WorkerParameters;
import com.mycollege.schedule.data.cache.CacheManager;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Provider;
import dagger.internal.Providers;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast",
    "deprecation",
    "nullness:initialization.field.uninitialized"
})
public final class ScheduleWorker_Factory implements Factory<ScheduleWorker> {
  private final Provider<Context> contextProvider;

  private final Provider<WorkerParameters> workerParamsProvider;

  private final Provider<CacheManager> cacheManagerProvider;

  public ScheduleWorker_Factory(Provider<Context> contextProvider,
      Provider<WorkerParameters> workerParamsProvider,
      Provider<CacheManager> cacheManagerProvider) {
    this.contextProvider = contextProvider;
    this.workerParamsProvider = workerParamsProvider;
    this.cacheManagerProvider = cacheManagerProvider;
  }

  @Override
  public ScheduleWorker get() {
    return newInstance(contextProvider.get(), workerParamsProvider.get(), cacheManagerProvider.get());
  }

  public static ScheduleWorker_Factory create(javax.inject.Provider<Context> contextProvider,
      javax.inject.Provider<WorkerParameters> workerParamsProvider,
      javax.inject.Provider<CacheManager> cacheManagerProvider) {
    return new ScheduleWorker_Factory(Providers.asDaggerProvider(contextProvider), Providers.asDaggerProvider(workerParamsProvider), Providers.asDaggerProvider(cacheManagerProvider));
  }

  public static ScheduleWorker_Factory create(Provider<Context> contextProvider,
      Provider<WorkerParameters> workerParamsProvider,
      Provider<CacheManager> cacheManagerProvider) {
    return new ScheduleWorker_Factory(contextProvider, workerParamsProvider, cacheManagerProvider);
  }

  public static ScheduleWorker newInstance(Context context, WorkerParameters workerParams,
      CacheManager cacheManager) {
    return new ScheduleWorker(context, workerParams, cacheManager);
  }
}

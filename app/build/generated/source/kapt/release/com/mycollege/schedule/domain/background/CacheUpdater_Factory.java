// Generated by Dagger (https://dagger.dev).
package com.mycollege.schedule.domain.background;

import com.mycollege.schedule.data.cache.CacheManager;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Provider;
import dagger.internal.Providers;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast",
    "deprecation",
    "nullness:initialization.field.uninitialized"
})
public final class CacheUpdater_Factory implements Factory<CacheUpdater> {
  private final Provider<CacheManager> cacheManagerProvider;

  public CacheUpdater_Factory(Provider<CacheManager> cacheManagerProvider) {
    this.cacheManagerProvider = cacheManagerProvider;
  }

  @Override
  public CacheUpdater get() {
    return newInstance(cacheManagerProvider.get());
  }

  public static CacheUpdater_Factory create(
      javax.inject.Provider<CacheManager> cacheManagerProvider) {
    return new CacheUpdater_Factory(Providers.asDaggerProvider(cacheManagerProvider));
  }

  public static CacheUpdater_Factory create(Provider<CacheManager> cacheManagerProvider) {
    return new CacheUpdater_Factory(cacheManagerProvider);
  }

  public static CacheUpdater newInstance(CacheManager cacheManager) {
    return new CacheUpdater(cacheManager);
  }
}

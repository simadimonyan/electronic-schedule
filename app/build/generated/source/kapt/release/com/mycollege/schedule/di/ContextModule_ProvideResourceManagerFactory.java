// Generated by Dagger (https://dagger.dev).
package com.mycollege.schedule.di;

import android.content.Context;
import com.mycollege.schedule.presentation.repository.ResourceManager;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.Provider;
import dagger.internal.Providers;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;

@ScopeMetadata
@QualifierMetadata("dagger.hilt.android.qualifiers.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast",
    "deprecation",
    "nullness:initialization.field.uninitialized"
})
public final class ContextModule_ProvideResourceManagerFactory implements Factory<ResourceManager> {
  private final Provider<Context> contextProvider;

  public ContextModule_ProvideResourceManagerFactory(Provider<Context> contextProvider) {
    this.contextProvider = contextProvider;
  }

  @Override
  public ResourceManager get() {
    return provideResourceManager(contextProvider.get());
  }

  public static ContextModule_ProvideResourceManagerFactory create(
      javax.inject.Provider<Context> contextProvider) {
    return new ContextModule_ProvideResourceManagerFactory(Providers.asDaggerProvider(contextProvider));
  }

  public static ContextModule_ProvideResourceManagerFactory create(
      Provider<Context> contextProvider) {
    return new ContextModule_ProvideResourceManagerFactory(contextProvider);
  }

  public static ResourceManager provideResourceManager(Context context) {
    return Preconditions.checkNotNullFromProvides(ContextModule.INSTANCE.provideResourceManager(context));
  }
}

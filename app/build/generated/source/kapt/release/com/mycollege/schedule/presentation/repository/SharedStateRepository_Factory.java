// Generated by Dagger (https://dagger.dev).
package com.mycollege.schedule.presentation.repository;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast",
    "deprecation",
    "nullness:initialization.field.uninitialized"
})
public final class SharedStateRepository_Factory implements Factory<SharedStateRepository> {
  @Override
  public SharedStateRepository get() {
    return newInstance();
  }

  public static SharedStateRepository_Factory create() {
    return InstanceHolder.INSTANCE;
  }

  public static SharedStateRepository newInstance() {
    return new SharedStateRepository();
  }

  private static final class InstanceHolder {
    static final SharedStateRepository_Factory INSTANCE = new SharedStateRepository_Factory();
  }
}

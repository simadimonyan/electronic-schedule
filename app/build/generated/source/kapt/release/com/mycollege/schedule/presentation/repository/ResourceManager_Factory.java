// Generated by Dagger (https://dagger.dev).
package com.mycollege.schedule.presentation.repository;

import android.content.Context;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Provider;
import dagger.internal.Providers;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast",
    "deprecation",
    "nullness:initialization.field.uninitialized"
})
public final class ResourceManager_Factory implements Factory<ResourceManager> {
  private final Provider<Context> contextProvider;

  public ResourceManager_Factory(Provider<Context> contextProvider) {
    this.contextProvider = contextProvider;
  }

  @Override
  public ResourceManager get() {
    return newInstance(contextProvider.get());
  }

  public static ResourceManager_Factory create(javax.inject.Provider<Context> contextProvider) {
    return new ResourceManager_Factory(Providers.asDaggerProvider(contextProvider));
  }

  public static ResourceManager_Factory create(Provider<Context> contextProvider) {
    return new ResourceManager_Factory(contextProvider);
  }

  public static ResourceManager newInstance(Context context) {
    return new ResourceManager(context);
  }
}

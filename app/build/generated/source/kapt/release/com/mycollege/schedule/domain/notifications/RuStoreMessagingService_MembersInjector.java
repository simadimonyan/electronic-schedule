// Generated by Dagger (https://dagger.dev).
package com.mycollege.schedule.domain.notifications;

import com.mycollege.schedule.data.cache.CacheManager;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.Provider;
import dagger.internal.Providers;
import dagger.internal.QualifierMetadata;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast",
    "deprecation",
    "nullness:initialization.field.uninitialized"
})
public final class RuStoreMessagingService_MembersInjector implements MembersInjector<RuStoreMessagingService> {
  private final Provider<CacheManager> cacheManagerProvider;

  public RuStoreMessagingService_MembersInjector(Provider<CacheManager> cacheManagerProvider) {
    this.cacheManagerProvider = cacheManagerProvider;
  }

  public static MembersInjector<RuStoreMessagingService> create(
      Provider<CacheManager> cacheManagerProvider) {
    return new RuStoreMessagingService_MembersInjector(cacheManagerProvider);
  }

  public static MembersInjector<RuStoreMessagingService> create(
      javax.inject.Provider<CacheManager> cacheManagerProvider) {
    return new RuStoreMessagingService_MembersInjector(Providers.asDaggerProvider(cacheManagerProvider));
  }

  @Override
  public void injectMembers(RuStoreMessagingService instance) {
    injectCacheManager(instance, cacheManagerProvider.get());
  }

  @InjectedFieldSignature("com.mycollege.schedule.domain.notifications.RuStoreMessagingService.cacheManager")
  public static void injectCacheManager(RuStoreMessagingService instance,
      CacheManager cacheManager) {
    instance.cacheManager = cacheManager;
  }
}
